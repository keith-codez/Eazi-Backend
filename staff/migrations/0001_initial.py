# Generated by Django 5.1.6 on 2025-04-21 23:07

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(choices=[('MR', 'Mr'), ('MRS', 'Mrs'), ('MS', 'Ms'), ('DR', 'Dr')], default='MR', max_length=10)),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('phone_number', models.CharField(max_length=15, unique=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True, unique=True)),
                ('national_id', models.CharField(max_length=11, unique=True)),
                ('street_address', models.CharField(max_length=255, null=True)),
                ('address_line2', models.CharField(blank=True, max_length=255, null=True)),
                ('city', models.CharField(max_length=100, null=True)),
                ('country', models.CharField(max_length=100, null=True)),
                ('drivers_license', models.ImageField(blank=True, null=True, upload_to='drivers_licenses/')),
                ('next_of_kin1_first_name', models.CharField(max_length=100)),
                ('next_of_kin1_last_name', models.CharField(max_length=100)),
                ('next_of_kin1_id_number', models.CharField(max_length=11)),
                ('next_of_kin1_phone', models.CharField(max_length=15)),
                ('next_of_kin2_first_name', models.CharField(blank=True, max_length=100, null=True)),
                ('next_of_kin2_last_name', models.CharField(blank=True, max_length=100, null=True)),
                ('next_of_kin2_id_number', models.CharField(blank=True, max_length=11, null=True)),
                ('next_of_kin2_phone', models.CharField(blank=True, max_length=15, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_booking_date', models.DateField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Vehicle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('make', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
                ('manufacture_year', models.PositiveIntegerField()),
                ('color', models.CharField(max_length=50)),
                ('mileage', models.PositiveIntegerField()),
                ('mileage_allowance', models.PositiveIntegerField(default=0)),
                ('ownership', models.CharField(choices=[('company', 'Company Owned'), ('private', 'Privately Owned')], max_length=10)),
                ('price_per_day', models.DecimalField(decimal_places=2, max_digits=10)),
                ('deposit', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('maintenance_records', models.TextField(blank=True, null=True)),
                ('registration_number', models.CharField(max_length=20, unique=True)),
                ('next_service_date', models.DateField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('role', models.CharField(choices=[('staff', 'Staff'), ('customer', 'Customer')], max_length=15)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='MaintenanceRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('description', models.TextField()),
                ('cost', models.DecimalField(decimal_places=2, max_digits=10)),
                ('vehicle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='maintenance_entries', to='staff.vehicle')),
            ],
        ),
        migrations.CreateModel(
            name='Booking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('booking_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('booking_deposit', models.DecimalField(decimal_places=2, max_digits=10)),
                ('payment_method', models.CharField(choices=[('mobile transfer', 'Mobile Transfer'), ('debit card', 'Debit Card'), ('cash', 'Cash')], default='cash', max_length=20)),
                ('booking_status', models.CharField(choices=[('confirmed', 'Confirmed'), ('pending', 'Pending'), ('completed', 'Completed'), ('active', 'Active'), ('canceled', 'Canceled')], default='pending', max_length=20)),
                ('estimated_mileage', models.PositiveIntegerField(default=0)),
                ('destination', models.CharField(blank=True, max_length=255, null=True)),
                ('discount_amount', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('discount_description', models.TextField(blank=True, null=True)),
                ('pickup_location', models.CharField(blank=True, max_length=255, null=True)),
                ('dropoff_location', models.CharField(blank=True, max_length=255, null=True)),
                ('pickup_time', models.TimeField(blank=True, null=True)),
                ('dropoff_time', models.TimeField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bookings', to='staff.customer')),
                ('vehicle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bookings', to='staff.vehicle')),
            ],
        ),
        migrations.CreateModel(
            name='VehicleImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='vehicle_images/')),
                ('vehicle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='staff.vehicle')),
            ],
        ),
        migrations.CreateModel(
            name='VehicleUnavailability',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('reason', models.CharField(choices=[('maintenance', 'Maintenance'), ('booking', 'Booking'), ('other', 'Other')], default='other', max_length=255)),
                ('vehicle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='unavailable_periods', to='staff.vehicle')),
            ],
        ),
    ]
